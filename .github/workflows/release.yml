name: Maven Release to Central

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (optional - defaults to maven-release-plugin suggestion)'
        required: false
      development_version:
        description: 'Next development version (optional - defaults to maven-release-plugin suggestion)'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To allow pushing tags and commits
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          fetch-depth: 0

      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Configure Git
        run: |
          git config --global user.name "${{ vars.GIT_USER_NAME }}"
          git config --global user.email "${{ vars.GIT_USER_EMAIL }}"

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Create Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << 'EOF'
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>central</id>
                <username>${env.MAVEN_USERNAME}</username>
                <password>${env.MAVEN_PASSWORD}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>release</id>
                <properties>
                  <gpg.executable>gpg</gpg.executable>
                  <gpg.keyname>${env.GPG_KEY_ID}</gpg.keyname>
                  <gpg.passphrase>${env.GPG_PASSPHRASE}</gpg.passphrase>
                </properties>
              </profile>
            </profiles>
          </settings>
          EOF

      - name: Run tests
        run: mvn clean test

      - name: Prepare release
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          RELEASE_ARGS=""
          if [ -n "${{ github.event.inputs.release_version }}" ]; then
            RELEASE_ARGS="$RELEASE_ARGS -DreleaseVersion=${{ github.event.inputs.release_version }}"
          fi
          if [ -n "${{ github.event.inputs.development_version }}" ]; then
            RELEASE_ARGS="$RELEASE_ARGS -DdevelopmentVersion=${{ github.event.inputs.development_version }}"
          fi
          if [ -n "${{ github.event.inputs.release_version }}" ]; then
            RELEASE_ARGS="$RELEASE_ARGS -Dtag=v${{ github.event.inputs.release_version }}"
          fi
          
          mvn --batch-mode release:prepare \
            $RELEASE_ARGS \
            -DscmCommentPrefix="[maven-release-plugin] " \
            -Prelease

      - name: Perform release
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn --batch-mode release:perform \
            -Darguments="-Prelease -DskipTests" \
            -Prelease

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.m2/settings.xml
          gpg --delete-secret-keys ${{ secrets.GPG_KEY_ID }} || true
